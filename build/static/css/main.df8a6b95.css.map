{"version":3,"file":"static/css/main.df8a6b95.css","mappings":"AAEA,MACC,eAGD,KCIC,aACA,SACA,SACA,QAVA,yCAOA,eACA,WACA,aACA,UAVA,iDAgBA,+CAKA,wCDhBA,gCACA,gBAFA,eCiBA,CDTD,WACO,iBAEP,eACC,0DACA,iFEgEC,yBF5DF,WAEgC,0BGvB/B,uEHuCA,+FAJA,qCACA,mBAKA,gBADA,cANA,YAGA,kBAKA,kBItCA,oBACC,qGJsBD,6BACA,wBACA,gBACA,yBAgBA,+MAnBA,6BACA,wBACA,gBACA,wBK/BD,uBACC,UAGD,KJIC,aACA,SACA,YACA,QAVA,yCAOA,cACA,aACA,cACA,UAVA,iDAgBA,+CKTc,SLcd,wCIbA,sBCAc,ODJd,kBCEc,QADA,MDId,sBAEA,iCACC,yBHqEA,wBGtED,iCAEgC,0BHoE/B,yBGtED,iCAGgC,2BEbjC,iBACC,qBACA,oCACC,wBACA,aAEA,QAAO,CADP,OACA,CAMF,kBACC,wBAAyB,CAEzB,qFAAsF,CACtF,uFAAwF,CACxF,gBAAiB,CACjB,gBAAiB,CACjB,sFAAyF,CACzF,uFAA0F,CAC1F,6DAA8D,CAC9D,6DAA8D,CAG9D,0BADA,iBACA,CAGC,uDACA,8DAGA,uDACA,8DAED,+EAGD,iBAOC,YAEA,gBADA,eAEA,gBARA,wCACA,sDAGA,UAIA,CANA,oCAHA,+DAGA,CASD,wBAEC,sEAEA,gBADA,eAFA,kEAGA,CAGD,yCAGC,sBADA,mBAEA,oBAKD,YACC,wBAAyB,CAGzB,aAEA,WADA,kBAEA,uBALA,2CAQD,cAMC,kFAHA,OAFA,+BAKA,CAMD,cAGC,iCAGA,mFALA,KAKA,CAMD,kBAGC,sBADA,qCADA,oCAGA,kBACA,6GAGD,oBACC,gKACA,6DAGD,oBAEC,gEADA,+JACA,CAKD,kBAEC,iCADA,qCACA,CAED,0CAA0C,UAA1C,CC9HC,0BAEA,mBASC,gGAKA,6BACA,kBAVA,gBAFA,YAFA,kBAgBA,gSACC,CN6DD,wBM/ED,mBAEgC,oBN6E/B,yBM/ED,mBAIgC,0BJqBhC,gCIzBA,mBAWE,uBACA,eAYF,2BACC,wBAGA,+KADA,8DAEC,CNkDD,wBMvDD,2BAEgC,+BAK/B,sDJ7BD,oBIkCE,oGAIF,qBACC,4CACA,yBAEC,8BAGA,oBACA,yFALA,WAMC,CN8BF,wBMrCA,yBAGgC,gBNkChC,yBMrCA,yBAIgC,gBJ5CjC,oBIkDE,+BACC,gCACA,wFACC,EAKJ,wBACC,8BACA,eNiBA,wBMnBD,wBAGgC,iBAKhC,qCAGC,8BACA,gBAFA,UADA,6DAGA,CJ1CD,6FACC,kEIqCD,qCAKuB,kBJtCvB,6FACC,wEIgCD,qCAKuB,kBAEvB,6CAEC,SAAQ,CADR,+DACA,CChFF,cRQC,aACA,UACA,UACA,QAVA,yCAOA,eACA,WACA,cACA,UAVA,iDAgBA,+CQdA,mBRmBA,wCQrBA,cAGA,uBAKA,0BACC,CPwEA,wBOlFF,cAEgC,cAGA,sBAHA,EPgF9B,yBOlFF,cAMgC,8BAM/B,iBACC,gBPqEA,yBOtED,iBAEgC,wBAEhC,qCAGD,gCACC","sources":["styles.scss","../node_modules/supergrids.css/src/scss/mixins/_colors.scss","../node_modules/supergrids.css/src/scss/mixins/_breakpoints.scss","../node_modules/supergrids.css/src/scss/mixins/_forms.scss","../node_modules/supergrids.css/src/scss/mixins/_helpers.scss","components/App/App.scss","../node_modules/supergrids.css/src/scss/mixins/_position.scss","utils/components/Scroll/Scroll.scss","components/Stories/Stories.scss","components/StartProject/StartProject.scss"],"sourcesContent":["@import '_variables';\r\n\r\n:root{\r\n\tposition: fixed;\r\n}\r\n\r\nbody{\r\n\toverflow: hidden;\r\n\tfont-family: 'Overpass',sans-serif;\r\n\tfont-weight: 500;\r\n\r\n\t@include bg-color($gray-0000);\r\n\t@include text-color($gray-1000);\r\n}\r\n\r\nbody,\r\n#root{ display: contents }\r\n\r\n.vertical-text{\r\n\ttransform: rotateZ(180deg);\r\n\twriting-mode: vertical-rl;\r\n\t//text-orientation: mixed;\r\n}\r\n\r\nh1,\r\n.md\\:h1{\r\n\t@include media-breakpoint(xl){ font-size: 70px !important }\r\n}\r\n\r\n@mixin button-hover{\r\n\tbackground-color: transparent;\r\n\tbackground-position: 0% 0%;\r\n\tbox-shadow: none;\r\n\tcolor: hsl(var(--bgHSL));\r\n}\r\n\r\n@include button-inputs{\r\n\theight: auto;\r\n\tborder: 1px solid hsl(var(--textHSL));\r\n\tborder-radius: 60px;\r\n\tpadding: 10px 35px;\r\n\t//background-color: transparent;\r\n\tbackground: linear-gradient(135deg,hsl(var(--textHSL)) 50%,transparent 50%) 100% 100%/200% 200%;\r\n\tcolor: inherit;\r\n\tbox-shadow: none;\r\n\ttransition: all 1s;\r\n\r\n\t@include hover{ @include button-hover }\r\n\t&:active{ @include button-hover }\r\n\t&:focus{ @include button-hover }\r\n}","/// TODO: Maybe .bg-calc, .text-calc\n\n@mixin calc-hsl($prefix){\n\t--#{$prefix}HSL:\n\t\tvar(--#{$prefix}H),\n\t\tvar(--#{$prefix}S),\n\t\tvar(--#{$prefix}L);\n}\n\n@mixin hsla-split($color,$prefix){\n\t--#{$prefix}H: #{       hue($color)};\n\t--#{$prefix}S: #{saturation($color)};\n\t--#{$prefix}L: #{ lightness($color)};\n\t--#{$prefix}A: #{     alpha($color)};\n\t@include calc-hsl($prefix);\n}\n\n@mixin bg-color($color,$up: null,$down: null,$breakpoints: $grid-breakpoints,$imp: false){ @include media-breakpoint($up,$down,$breakpoints){\n\t@include hsla-split($color,bg);\n\tbackground-color: Hsla(var(--bgHSL),var(--bgA)) if($imp,!important,null);\n}}\n\n@mixin text-color($color,$up: null,$down: null,$breakpoints: $grid-breakpoints,$imp: false){ @include media-breakpoint($up,$down,$breakpoints){\n\t@include hsla-split($color,text);\n\tcolor: Hsla(var(--textHSL),var(--textA)) if($imp,!important,null);\n}}\n","// Breakpoints - Media queries, Viewport sizes, etc.\n\n// Forked & modified (mostly formatting + minor tweaks) from Bootstrap.\n// https://github.com/twbs/bootstrap/blob/master/scss/mixins/_breakpoints.scss\n// Rev. Aug 22, 2020 02:36 PM PDT - 7058f89\n// Bootstrap is licensed MIT. https://github.com/twbs/bootstrap\n\n// Breakpoints are a map of (name: minimum width), order from small to large (mobile-first approach). Ex:\n//   (\n//     xs: 0,      - Phones  (portrait)  [0px   , 511.98px]\n//     sm: 512px,  - Phones  (landscape) [512px , 767.98px]\n//     md: 768px,  - Tablets (portrait)  [768px , 1023.98px]\n//     lg: 1024px, - Tablets (landscape) [1024px, 1279.98px]\n//     xl: 1280px  - Computers           [1280px, infinity]\n//   )\n// The map defined as the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// -----------------------------------------------------------------------------\n\n// 01 - FUNCTIONS\n\n// Name of the next breakpoint (null for the largest (last) breakpoint).\n//   >> breakpoint-next(sm)\n//   md\n//   >> breakpoint-next(sm,(xs: 0,sm: 512px,md: 768px,lg: 1024px,xl: 1280px))\n//   md\n@function breakpoint-next($name,$breakpoints: $grid-breakpoints,$breakpoint-names: map-keys($breakpoints)){\n\t$n: index($breakpoint-names,$name);\n\t@if not $n{ @error \"breakpoint `#{$name}` not found in `#{$breakpoints}`\"; }\n\t@return if($n < length($breakpoint-names),nth($breakpoint-names,$n + 1),null);\n}\n\n// Minimum of breakpoint width (lower bound of breakpoint, null for the smallest (first) breakpoint).\n//   >> breakpoint-min(sm,(xs: 0,sm: 512px,md: 768px,lg: 1024px,xl: 1280px))\n//   512px\n@function breakpoint-min($name,$breakpoints: $grid-breakpoints){\n\t$min: map-get($breakpoints,$name);\n\t@return if($min and $min > 0,$min,null);\n}\n\n// Maximum of breakpoint width (upper bound of breakpoint, null for the largest (last) breakpoint).\n// Value is the minimum of the next breakpoint minus 0.02px.\n// Needed to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Use 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//   >> breakpoint-max(sm,(xs: 0,sm: 512px,md: 768px,lg: 1024px,xl: 1280px))\n//   767.98px\n@function breakpoint-max($name,$breakpoints: $grid-breakpoints){\n\t$next: breakpoint-next($name,$breakpoints);\n\t@return if($next,breakpoint-min($next,$breakpoints) - .02,null);\n}\n\n// Breakpoint name with a colon in the back (Blank if smallest (first) breakpoint).\n// Useful for making responsive utilities.\n//   >> breakpoint-prefix(xs)\n//   \"\"  (Returns a blank string)\n//   >> breakpoint-prefix(sm,(xs: 0,sm: 512px,md: 768px,lg: 1024px,xl: 1280px))\n//   \"sm:\"\n@function breakpoint-prefix($name,$breakpoints: $grid-breakpoints){\n\t$min: breakpoint-min($name,$breakpoints);\n\t@return if($min and $min > 0,\"#{$name}\\\\:\",\"\");\n}\n\n// -----------------------------------------------------------------------------\n\n// 02 - MIXINS\n\n// Media query from parameters.\n// Makes the @content apply for all breakpoints from $lower to $upper\n//   >> media-breakpoint(sm){ @content }\n//   @media (min-width: 512px){ @content }\n//   >> media-breakpoint(sm,md){ @content }\n//   @media (min-width: 512px) and (max-width: 1023.98px){ @content }\n//   >> media-breakpoint(null,md){ @content } or media-breakpoint($upper: md){ @content }\n//   @media (max-width: 1023.98px){ @content }\n@mixin media-breakpoint($lower: null,$upper: null,$breakpoints: $grid-breakpoints){\n\t$min: breakpoint-min($lower,$breakpoints);\n\t$max: if($upper,breakpoint-max($upper,$breakpoints),null);\n\n\t@if $min and $max{\n\t\t@if $min > $max{ @warn \"Breakpoint #{$lower} > #{$upper}: @media (min-width: #{$min}) and (max-width: #{$max}){ @content } is invalid.\"; }\n\t\t@media (min-width: $min) and (max-width: $max){ @content }\n\t}@else if $min and $min > 0{\n\t\t@media (min-width: $min){ @content }\n\t}@else if $max and $max > 0{\n\t\t@media (max-width: $max){ @content }\n\t}@else{ @content }\n}\n\n// Media query with min-width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n//   >> media-breakpoint-up(sm){ @content }\n//   @media (min-width: 512px){ @content }\n@mixin media-breakpoint-up($name,$breakpoints: $grid-breakpoints){ @include media-breakpoint($name,null,$breakpoints){ @content }}\n\n// Media query with max-width. No query for the largest breakpoint. (rarely used in mobile-first approach)\n// Makes the @content apply to the given breakpoint and narrower.\n//   >> media-breakpoint-down(sm){ @content }\n//   @media (max-width: 767.98px){ @content }\n@mixin media-breakpoint-down($name,$breakpoints: $grid-breakpoints){ @include media-breakpoint(null,$name,$breakpoints){ @content }}\n\n// Media query with min-width and max-width (spans multiple breakpoints).\n// Makes the @content apply for all breakpoints from $lower to $upper\n//   >> media-breakpoint-between(sm,md){ @content }\n//   @media (min-width: 512px) and (max-width: 1023.98px){ @content }\n@mixin media-breakpoint-between($lower,$upper,$breakpoints: $grid-breakpoints){ @include media-breakpoint($lower,$upper,$breakpoints){ @content }}\n\n// Similar to media-breakpoint-between when $lower = $upper (spanning only one breakpoint)\n//   >> media-breakpoint-only(sm){ @content }\n//   @media (min-width: 512px) and (max-width: 767.98px){ @content }\n@mixin media-breakpoint-only($name,$breakpoints: $grid-breakpoints){ @include media-breakpoint($name,$name,$breakpoints){ @content }}\n\n// Make a custom class/etc. responsive (mobile-first approach)\n//   >> @include responsive(\".cc\"){ custom: rule }\n//   .cc{ custom: rule }\n//   @media (min-width: 512px){ .cc-sm{ custom: rule }}\n//   @media (min-width: 768px){ .cc-md{ custom: rule }}\n//   @media (min-width: 1024px){ .cc-lg{ custom: rule }}\n//   @media (min-width: 1280px){ .cc-xl{ custom: rule }}\n@mixin responsive($selector,$breakpoints: $grid-breakpoints){\n\t@each $breakpoint in map-keys($breakpoints){\n\t\t@include media-breakpoint-up($breakpoint,$breakpoints){\n\t\t\t#{breakpoint-prefix($breakpoint,$breakpoints)}#{$selector}{ @content }\n\t\t}\n\t}\n}\n\n// Make a custom class/etc. responsive (for a particular breakpoint only) (single breakpoints)\n//   >> @include responsive-only(\".cc\"){ custom: rule }\n//   @media (max-width: 511.98px) { .cc-xs-o { custom: rule }}\n//   @media (min-width: 512px) and (max-width: 767.98px) { .cc-sm-o { custom: rule }}\n//   @media (min-width: 768px) and (max-width: 1023.98px) { .cc-md-o { custom: rule }}\n//   @media (min-width: 1024px) and (max-width: 1279.98px) { .cc-lg-o { custom: rule }}\n//   @media (min-width: 1280px) { .cc-xl-o { custom: rule }}\n@mixin responsive-only($selector,$breakpoints: $grid-breakpoints){\n\t@each $breakpoint in map-keys($breakpoints){\n\t\t@include media-breakpoint-only($breakpoint,$breakpoints){\n\t\t\t#{$breakpoint}-o\\:#{$selector}{ @content }\n\t\t}\n\t}\n}\n\n/// MAYBE: responsive-down (not advised for mobile-first approach)\n","// Reference: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\r\n\r\n@mixin button-inputs{\r\n\tinput[type=\"button\"],\r\n\tinput[type=\"reset\"],\r\n\tinput[type=\"submit\"],\r\n\tbutton,\r\n\t.button{ @content }\r\n}\r\n\r\n@mixin outline-inputs{\r\n\tinput[type=\"color\"],\r\n\tinput[type=\"date\"],\r\n\tinput[type=\"datetime-local\"],\r\n\tinput[type=\"email\"],\r\n\tinput[type=\"month\"],\r\n\tinput[type=\"number\"],\r\n\tinput[type=\"password\"],\r\n\tinput[type=\"search\"],\r\n\tinput[type=\"tel\"],\r\n\tinput[type=\"text\"],\r\n\tinput[type=\"time\"],\r\n\tinput[type=\"url\"],\r\n\tinput[type=\"week\"],\r\n\tselect,\r\n\ttextarea{ @content }\r\n\r\n\t@include button-inputs{\r\n\t\t&.outline{ @content }\r\n\t}\r\n}\r\n\r\n@mixin input-range-thumb{\r\n\t&::-webkit-slider-thumb{ @content }\r\n\t&::-moz-range-thumb{ @content }\r\n}\r\n@mixin input-range-track{\r\n\t&::-webkit-slider-runnable-track{ @content }\r\n\t&::-moz-range-track{ @content }\r\n}\r\n@mixin input-range-progress{\r\n\t&::-moz-range-progress{ @content }\r\n}\r\n\r\n@mixin input-color-swatch{\r\n\t&::-webkit-color-swatch{ @content }\r\n\t&::-moz-color-swatch{ @content }\r\n}\r\n@mixin input-color-swatch-wrapper{\r\n\t&::-webkit-color-swatch-wrapper{ @content }\r\n\t&::-moz-focus-inner{ @content }\r\n}\r\n\r\n@mixin outline-input-style{\r\n\theight: $input-height;\r\n\tborder-radius: 6px;\r\n\tborder: 0.5px solid Hsla(var(--textHSL),.05);\r\n\tpadding: 4px 12px;\r\n\tbackground-color: Hsla(var(--textHSL),.0375);\r\n\tcolor: Hsla(var(--textHSL),var(--textA));\r\n\tbox-shadow: none;\r\n\ttext-align: left;\r\n\tcursor: auto;\r\n\t// user-select: initial;\r\n\r\n\t&:focus{\r\n\t\tborder-color: Hsla(var(--accentHSL),.375);\r\n\t\toutline: none;\r\n\t\tbackground-color: Hsla(var(--accentHSL),.0375);\r\n\t\tbox-shadow: none;\r\n\t}\r\n}\r\n\r\n@mixin button-input-style{\r\n\theight: $input-height;\r\n\tborder-radius: 6px;\r\n\tborder: none;\r\n\tpadding: 4px 12px;\r\n\tbackground-color: Hsla(var(--accentHSL),var(--accentA));\r\n\tcolor: white;\r\n\tbox-shadow: 0 4px 20px Hsla(var(--accentHSL),.25);\r\n\ttext-align: center;\r\n\tcursor: pointer;\r\n\t// user-select: none;\r\n\r\n\t&:focus{\r\n\t\tborder-color: Hsla(var(--accentHSL),.375);\r\n\t\toutline: none;\r\n\t\tbackground-color: Hsla(var(--accentHSL),var(--accentA));\r\n\t\tbox-shadow: 0 4px 20px Hsla(var(--accentHSL),var(--accentA));\r\n\t}\r\n}\r\n","@mixin all-selector{\n\t*,\n\t*::before,\n\t*::after{ @content }\n}\n\n@mixin hover{\n\t@media (hover: hover){\n\t\t&:hover{ @content }\n\t}\n}\n\n@mixin disabled{\n\t&:disabled,\n\t&[disabled]:not([disabled=\"false\"]){ @content }\n}\n\n@mixin retina-display{\n\t@media (-webkit-min-device-pixel-ratio: 2){ @content }\n}\n\n// -- BROWSER DETECT MIXINS ------------------------------------------------ //\n// https://www.browserstack.com/guide/create-browser-specific-css\n\n/// TODO: BUG Not working\n// @mixin chrome-only{\n// \t@media screen and (-webkit-min-device-pixel-ratio: 0) and (min-resolution: .001dpcm){ @content }\n// }\n\n@mixin firefox-only{\n\t@supports (-moz-appearance: none){ @content }\n}\n\n@mixin safari-only{\n\t// Safari 11+\n\t@media not all and (min-resolution: .001dpcm){\n\t\t@supports (-webkit-appearance: none) and (stroke-color: transparent){ @content }\n\t}\n\n\t// Safari 10.1\n\t@media not all and (min-resolution: .001dpcm){\n\t\t@supports (-webkit-appearance: none) and (not (stroke-color: transparent)){ @content }\n\t}\n\n\t/// TODO: BUG SASS error\n\t// Safari 6.1-10.0 (but not 10.1)\n\t// @media screen and (min-color-index: 0) and(-webkit-min-device-pixel-ratio: 0){\n\t// \t@media{ @content }\n\t// }\n}\n","@import '../../_variables';\r\n\r\nbody:not(.loaded) #App{\r\n\topacity: 0;\r\n}\r\n\r\n#App{\r\n\tposition: absolute;\r\n\t@include fit(0);\r\n\t@include bg-color($gray-0175);\r\n\t@include text-color(hsl(35,100%,97.5%));\r\n\tcursor: none !important;\r\n\ttransition: opacity 5s;\r\n\r\n\t>div>.scroll-content-wrapper{\r\n\t\tpadding: 20px 0 !important;\r\n\t\t@include media-breakpoint(md){ padding: 70px 0 !important; }\r\n\t\t@include media-breakpoint(xl){ padding: 140px 0 !important; }\r\n\t}\r\n}\r\n","@mixin pos-sta($up: null,$down: null,$breakpoints: $grid-breakpoints,$imp: false){ @include media-breakpoint($up,$down,$breakpoints){ position: static   if($imp,!important,null) }}\n@mixin pos-rel($up: null,$down: null,$breakpoints: $grid-breakpoints,$imp: false){ @include media-breakpoint($up,$down,$breakpoints){ position: relative if($imp,!important,null) }}\n@mixin pos-abs($up: null,$down: null,$breakpoints: $grid-breakpoints,$imp: false){ @include media-breakpoint($up,$down,$breakpoints){ position: absolute if($imp,!important,null) }}\n@mixin pos-fix($up: null,$down: null,$breakpoints: $grid-breakpoints,$imp: false){ @include media-breakpoint($up,$down,$breakpoints){ position: fixed    if($imp,!important,null) }}\n@mixin pos-sty($up: null,$down: null,$breakpoints: $grid-breakpoints,$imp: false){ @include media-breakpoint($up,$down,$breakpoints){ position: sticky   if($imp,!important,null) }}\n\n@mixin fit($top: null,$right: $top,$bottom: $top,$left: $right,$up: null,$down: null,$breakpoints: $grid-breakpoints,$imp: false){\n\t@include media-breakpoint($up,$down,$breakpoints){\n\t\t@if $top   { top:    $top    if($imp,!important,null) }\n\t\t@if $right { right:  $right  if($imp,!important,null) }\n\t\t@if $bottom{ bottom: $bottom if($imp,!important,null) }\n\t\t@if $left  { left:   $left   if($imp,!important,null) }\n\t}\n}\n@mixin fit-x($offset,$up: null,$down: null,$breakpoints: $grid-breakpoints,$imp: false){ @include media-breakpoint($up,$down,$breakpoints){ @include fit(null,$offset,$imp: $imp); }}\n@mixin fit-y($offset,$up: null,$down: null,$breakpoints: $grid-breakpoints,$imp: false){ @include media-breakpoint($up,$down,$breakpoints){ @include fit($offset,null,$imp: $imp); }}\n@mixin fit-t($offset,$up: null,$down: null,$breakpoints: $grid-breakpoints,$imp: false){ @include media-breakpoint($up,$down,$breakpoints){ @include fit($offset,null,null,null,$imp: $imp); }}\n@mixin fit-r($offset,$up: null,$down: null,$breakpoints: $grid-breakpoints,$imp: false){ @include media-breakpoint($up,$down,$breakpoints){ @include fit(null,$offset,null,null,$imp: $imp); }}\n@mixin fit-b($offset,$up: null,$down: null,$breakpoints: $grid-breakpoints,$imp: false){ @include media-breakpoint($up,$down,$breakpoints){ @include fit(null,null,$offset,null,$imp: $imp); }}\n@mixin fit-l($offset,$up: null,$down: null,$breakpoints: $grid-breakpoints,$imp: false){ @include media-breakpoint($up,$down,$breakpoints){ @include fit(null,null,null,$offset,$imp: $imp); }}\n\n@mixin stretch-to-fit($up: null,$down: null,$breakpoints: $grid-breakpoints,$imp: false){ @include media-breakpoint($up,$down,$breakpoints){ @include fit(0px,$imp: $imp); }}\n\n@mixin layered($up: null,$down: null,$breakpoints: $grid-breakpoints,$imp: false){ @include media-breakpoint($up,$down,$breakpoints){\n\tposition: relative if($imp,!important,null);\n\t>*{\n\t\tposition: absolute if($imp,!important,null);\n\t\t@include fit(0px,$imp: $imp);\n\t}\n}}\n\n// @mixin stretch-to-fit($up: null,$down: null,$breakpoints: $grid-breakpoints,$imp: false){\n// \t@include media-breakpoint($up,$down,$breakpoints){\n// \t\ttop: 0 if($imp,!important,null);\n// \t\tright: 0 if($imp,!important,null);\n// \t\tbottom: 0 if($imp,!important,null);\n// \t\tleft: 0 if($imp,!important,null)\n// \t}\n// }\n","// TODO-FUTURE: @property rules\r\n\r\n// Hide Scrollbars ------------------------------------------------------------\r\n\r\n.scroll-viewport{\r\n\tscrollbar-width: none;\r\n\t&::-webkit-scrollbar{\r\n\t\t-webkit-appearance: none;\r\n\t\tdisplay: none;\r\n\t\twidth: 0;\r\n\t\theight: 0;\r\n\t}\r\n}\r\n\r\n// Container Styles -----------------------------------------------------------\r\n\r\n.scroll-container{\r\n\t--smoothScrollDuration: 2;\r\n\r\n\t--scrollRight: calc(var(--scrollWidth) - var(--scrollLeft) - var(--scrollClientWidth));\r\n\t--scrollBottom: calc(var(--scrollHeight) - var(--scrollTop) - var(--scrollClientHeight));\r\n\t--scrollXPhase: 0; // Handling 0/0 case\r\n\t--scrollYPhase: 0; // Handling 0/0 case\r\n\t--scrollXPhase: calc(var(--scrollLeft) / (var(--scrollWidth) - var(--scrollClientWidth)));\r\n\t--scrollYPhase: calc(var(--scrollTop) / (var(--scrollHeight) - var(--scrollClientHeight)));\r\n\t--scrollXDirection: clamp(-1,var(--scrollXVelocity) * 2 + 1,1);\r\n\t--scrollYDirection: clamp(-1,var(--scrollYVelocity) * 2 + 1,1);\r\n\r\n\tposition: relative;\r\n\toverflow: hidden !important; // !important resolves SuperGrids.css scroll-x scroll-y conflict\r\n\r\n\t&.scroll-x{\r\n\t\t>.scroll-bar-x{ display: block }\r\n\t\t>.scroll-viewport{ overflow-x: scroll }\r\n\t}\r\n\t&.scroll-y{\r\n\t\t>.scroll-bar-y{ display: block }\r\n\t\t>.scroll-viewport{ overflow-y: scroll }\r\n\t}\r\n\t&.smooth-wheel>.scroll-viewport{ scroll-behavior: initial !important }\r\n}\r\n\r\n.scroll-viewport{\r\n\ttransform-style: preserve-3d;     // Needed for parallax\r\n\tperspective: 1px;                 // Needed for parallax\r\n\tperspective-origin: center;       // Needed for parallax\r\n\t*{ transform-style: preserve-3d } // Needed for parallax\r\n\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tmax-width: 100%;\r\n\tmax-height: 100%;\r\n\toverflow: hidden;\r\n}\r\n\r\n.scroll-content-wrapper{\r\n\twidth: fit-content;\r\n\theight: fit-content;\r\n\tmin-width: 100%;\r\n\tmin-height: 100%;\r\n}\r\n\r\n.scroll-viewport,\r\n.scroll-content-wrapper{\r\n\tmargin: 0 !important;\r\n\tborder: none !important;\r\n\tpadding: 0 !important;\r\n}\r\n\r\n// Scrollbar Styles -----------------------------------------------------------\r\n\r\n.scroll-bar{\r\n\t--scrollBarThickness: 4px;\r\n\t&:hover{ --scrollBarThickness: 8px; }\r\n\r\n\tdisplay: none;\r\n\tposition: absolute;\r\n\tmargin: 2px;\r\n\ttransition: opacity .5s;\r\n}\r\n\r\n.scroll-bar-x{\r\n\tright: var(--scrollBarThickness);\r\n\t// bottom: 0;\r\n\tleft: 0;\r\n\r\n\t// Auto hide scrollbar if scrollWidth<=clientWidth\r\n\tbottom: min(\r\n\t\tcalc((var(--scrollWidth) - var(--scrollClientWidth)) * 10000px - 10000px), // scrollWidth<=clientWidth\r\n\t\t0px                                                                        // scrollWidth>clientWidth\r\n\t);\r\n}\r\n\r\n.scroll-bar-y{\r\n\ttop: 0;\r\n\t//right: 0;\r\n\tbottom: var(--scrollBarThickness);\r\n\r\n\t// Auto hide scrollbar if scrollHeight<=clientHeight\r\n\tright: min(\r\n\t\tcalc((var(--scrollHeight) - var(--scrollClientHeight)) * 10000px - 10000px), // scrollHeight<=clientHeight\r\n\t\t0px                                                                          // scrollHeight>clientHeight\r\n\t);\r\n}\r\n\r\n.scroll-bar-thumb{\r\n\tmin-width: var(--scrollBarThickness);\r\n\tmin-height: var(--scrollBarThickness);\r\n\tborder-radius: 10000px;\r\n\ttouch-action: none; // @use-gesture/react.useDrag\r\n\ttransition: transform .05s;\r\n}\r\n\r\n.scroll-bar-thumb-x{\r\n\ttransform: translateX(calc((var(--scrollLeft) / var(--scrollClientWidth)) * 100%)); // scrollLeft / clientWidth * 100%\r\n\twidth: calc((var(--scrollClientWidth) / var(--scrollWidth)) * 100%); // clientWidth / scrollWidth * 100%\r\n}\r\n\r\n.scroll-bar-thumb-y{\r\n\ttransform: translateY(calc((var(--scrollTop) / var(--scrollClientHeight)) * 100%)); // scrollTop / clientHeight * 100%\r\n\theight: calc((var(--scrollClientHeight) / var(--scrollHeight)) * 100%); // clientHeight / scrollHeight * 100%\r\n}\r\n\r\n// Color Styles ---------------------------------------------------------------\r\n\r\n.scroll-bar-thumb{\r\n\tborder: .5px solid rgba(white,.25);\r\n\tbackground-color: rgba(black,.75);\r\n}\r\n.scroll-container:not(:hover)>.scroll-bar{ opacity: .5 }\r\n","@import '../../_variables';\r\n\r\n#Stories{\r\n\t>*{ max-width: 100% }\r\n\r\n\t#big-text{\r\n\t\tpadding: 20px 40px;\r\n\t\t@include media-breakpoint(md){ padding: 70px 140px }\r\n\t\topacity: .25;\r\n\t\t@include media-breakpoint(xl){ font-size: 70px !important; }\r\n\t\tline-height: 1.1;\r\n\t\t//-webkit-text-stroke-width: .5px;\r\n\t\t//-webkit-text-stroke-color: hsl(35deg,100%,97.5%);\r\n\r\n\t\tbackground: hsla(35deg,100%,97.5%,.5) linear-gradient(135deg,hsl(35deg,100%,97.5%) 50%,transparent 50%) 0% 0%/200% 200%;\r\n\t\t@include firefox-only{\r\n\t\t\tbackground: transparent;\r\n\t\t\tcolor: hsl(35deg,100%,97.5%);\r\n\t\t}\r\n\t\t-webkit-background-clip: text;\r\n\t\tcolor: transparent;\r\n\r\n\t\ttransition:\r\n\t\t\ttransform 2.5s,\r\n\t\t\topacity 2.5s,\r\n\t\t\tline-height 2.5s,\r\n\t\t\tbackground-position 2.5s 2.5s;\r\n\t}\r\n\r\n\t>.scroll-container{\r\n\t\tmargin: 70px 0 !important;\r\n\t\t@include media-breakpoint(md){ margin: 70px 0 140px !important; }\r\n\t\tuser-select: none;\r\n\t\ttransition:\r\n\t\t\ttransform 5s 2.5s,\r\n\t\t\topacity 7.5s 2.5s;\r\n\t\t.scroll-bar-x{ display: none }\r\n\t}\r\n\r\n\t.story-card-row{\r\n\t\t@include hover{\r\n\t\t\timg{ filter: saturate(1) sepia(0) }\r\n\t\t}\r\n\t}\r\n\r\n\t.story-card{\r\n\t\twidth: min-content;\r\n\t\timg{\r\n\t\t\twidth: 439px;\r\n\t\t\tmax-width: calc(100vw - 140px);\r\n\t\t\t@include media-breakpoint(md){ max-width: 50vw }\r\n\t\t\t@include media-breakpoint(lg){ max-width: 25vw }\r\n\t\t\tpointer-events: none;\r\n\t\t\ttransition:\r\n\t\t\t\tfilter 5s;\r\n\t\t}\r\n\t\t@include hover{\r\n\t\t\timg{\r\n\t\t\t\tfilter: none;\r\n\t\t\t\ttransition:\r\n\t\t\t\t\tfilter 1s;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t.vertical-text{\r\n\t\tmargin-bottom: 150px !important;\r\n\t\tpadding: 0 40px;\r\n\t\t@include media-breakpoint(sm){ padding: 0 140px }\r\n\t}\r\n}\r\n\r\nbody:not(.loaded) #Stories{\r\n\t#big-text{\r\n\t\ttransform: translateY(70px);\r\n\t\topacity: 0;\r\n\t\tbackground-position: 100% 100%;\r\n\t\tline-height: 2.2;\r\n\t\t@include safari-only{ line-height: 1.1 }\r\n\t}\r\n\t>.scroll-container{\r\n\t\ttransform: translateX(140px);\r\n\t\topacity: 0;\r\n\t}\r\n}","@import '../../_variables';\r\n\r\n#StartProject{\r\n\tmargin: 0 20px;\r\n\t@include media-breakpoint(md){ margin: 0 70px }\r\n\tborder-radius: 10px;\r\n\tpadding: 50px !important;\r\n\t@include media-breakpoint(md){ padding: 70px !important }\r\n\t@include media-breakpoint(xl){ padding: 140px 70px !important }\r\n\t@include bg-color(hsl(170,25%,75%));\r\n\t@include text-color($gray-0175);\r\n\ttransition:\r\n\t\topacity 5s 2.5s;\r\n\r\n\t>h5{\r\n\t\tline-height: 1.5;\r\n\t\t@include media-breakpoint(xl){ padding: 0 70px 0 140px }\r\n\t}\r\n\tbutton{ margin-top: 35px; }\r\n}\r\n\r\nbody:not(.loaded) #StartProject{\r\n\topacity: 0;\r\n}"],"names":[],"sourceRoot":""}